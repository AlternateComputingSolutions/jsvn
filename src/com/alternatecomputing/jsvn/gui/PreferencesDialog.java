package com.alternatecomputing.jsvn.gui;

import com.alternatecomputing.jsvn.configuration.Configuration;
import com.alternatecomputing.jsvn.configuration.ConfigurationManager;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.Frame;
import java.io.File;

/**
 *
 */
public class PreferencesDialog extends CenterableDialog {

	/** Creates new form PreferencesDialog */
	public PreferencesDialog(Frame parent, boolean modal) {
		super(parent, "Preferences", modal);
		initComponents();
		getRootPane().setDefaultButton(btnOK);

	}

	public PreferencesDialog(Frame parent, boolean modal, Configuration config) {
		super(parent, "Preferences", modal);
		initComponents();
		getRootPane().setDefaultButton(btnOK);
		populateFields(config);

	}


	private void populateFields(Configuration config) {
		txtWorkingDir.setText(config.getWorkingCopy());
		txtUserName.setText(config.getUsername());
		txtPassword.setText(config.getPassword());
		txtConfirmPassword.setText(config.getPassword());
	}


	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        btnOK = new javax.swing.JButton();
        btnCANCEL = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtWorkingDir = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnWorkingDir = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();

        setTitle("Preferences");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnOK.setMnemonic('O');
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        jPanel1.add(btnOK);

        btnCANCEL.setMnemonic('C');
        btnCANCEL.setText("Cancel");
        btnCANCEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCANCELActionPerformed(evt);
            }
        });

        jPanel1.add(btnCANCEL);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jPanel2.setPreferredSize(new java.awt.Dimension(541, 172));
        txtWorkingDir.setToolTipText("Sets the working directory");
        txtWorkingDir.setMinimumSize(new java.awt.Dimension(4, 25));
        txtWorkingDir.setPreferredSize(new java.awt.Dimension(4, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 316;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 29, 64);
        jPanel2.add(txtWorkingDir, gridBagConstraints);

        txtUserName.setToolTipText("Set the username");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 146;
        gridBagConstraints.insets = new java.awt.Insets(15, 30, 0, 0);
        jPanel2.add(txtUserName, gridBagConstraints);

        jLabel1.setText("Working Dir:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 22;
        gridBagConstraints.insets = new java.awt.Insets(30, 20, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Username:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 35;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 4, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 37;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 4, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Confirm Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 52, 150);
        jPanel2.add(jLabel4, gridBagConstraints);

        btnWorkingDir.setText("...");
        btnWorkingDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWorkingDirActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.insets = new java.awt.Insets(30, 180, 29, 11);
        jPanel2.add(btnWorkingDir, gridBagConstraints);

        txtPassword.setToolTipText("Set the password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 146;
        gridBagConstraints.insets = new java.awt.Insets(11, 30, 0, 0);
        jPanel2.add(txtPassword, gridBagConstraints);

        txtConfirmPassword.setToolTipText("Confirm Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 146;
        gridBagConstraints.insets = new java.awt.Insets(11, 30, 48, 0);
        jPanel2.add(txtConfirmPassword, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

	private void btnWorkingDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWorkingDirActionPerformed

		// Add your handling code here:
		JFileChooser chooser;
		File currentWorkingDirectory = new File(ConfigurationManager.getInstance().getWorkingDirectory());
		if (currentWorkingDirectory.exists()) {
			chooser = new JFileChooser(currentWorkingDirectory);
		} else {
			chooser = new JFileChooser();
		}

		chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		int action = chooser.showOpenDialog(new JFrame());
		if (action == JFileChooser.APPROVE_OPTION) {
			setWorkingDir(chooser.getSelectedFile().getPath());
		}
	}//GEN-LAST:event_btnWorkingDirActionPerformed

	private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
		// Add your handling code here:

		if (getWorkingDir() == null || getWorkingDir().equals("")) {
			// Show Error dialog
			JOptionPane.showMessageDialog(new JFrame(),
										  "Working Copy must have a value.",
										  "Validation Error",
										  JOptionPane.ERROR_MESSAGE);
			txtWorkingDir.requestFocus();

		} else if (!validWorkingDir(getWorkingDir())) {
			// Show Error dialog
			JOptionPane.showMessageDialog(new JFrame(),
										  "Working Copy must exist.",
										  "Validation Error",
										  JOptionPane.ERROR_MESSAGE);
			txtWorkingDir.requestFocus();

		} else if (!passwordsMatch(getPassword(), getConfirmPassword())) {

			// Show Error dialog
			JOptionPane.showMessageDialog(new JFrame(),
										  "Passwords do not match.",
										  "Validation Error",
										  JOptionPane.ERROR_MESSAGE);
			txtPassword.requestFocus();

		} else {

			Configuration cfg = new Configuration();
			cfg.setWorkingCopy(getWorkingDir());
			cfg.setUsername(getUsername());
			cfg.setPassword(getPassword());

			try {
				ConfigurationManager cfgMgr = ConfigurationManager.getInstance();
				cfgMgr.setConfig(cfg);
				cfgMgr.saveConfig();
			} catch (Exception ex) {
				ex.printStackTrace();
			}

			setVisible(false);
			dispose();

		}
	}//GEN-LAST:event_btnOKActionPerformed

	private void btnCANCELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCANCELActionPerformed
		// Add your handling code here:
		setVisible(false);
		dispose();
	}//GEN-LAST:event_btnCANCELActionPerformed

	/** Closes the dialog */
	private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
		setVisible(false);
		dispose();
	}//GEN-LAST:event_closeDialog

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		new PreferencesDialog(new java.awt.Frame(), true).show();
	}

	public String getUsername() {
		return txtUserName.getText();
	}

	public String getWorkingDir() {
		return txtWorkingDir.getText();
	}

	public String getPassword() {
		return new String(txtPassword.getPassword());
	}

	public String getConfirmPassword() {
		return new String(txtConfirmPassword.getPassword());
	}

	public void setPassword(String password) {
		txtPassword.setText(password);
	}

	public void setUsername(String userName) {
		txtUserName.setText(userName);
	}

	public void setWorkingDir(String workingDir) {
		txtWorkingDir.setText(workingDir);
	}

	private boolean passwordsMatch(String first, String second) {
		return first.equals(second);
	}

	private boolean validWorkingDir(String workingDir) {
		File f = new File(workingDir);
		return f.exists();
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtWorkingDir;
    private javax.swing.JButton btnOK;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JButton btnCANCEL;
    private javax.swing.JButton btnWorkingDir;
    // End of variables declaration//GEN-END:variables

}
