package com.alternatecomputing.jsvn.gui;

import com.alternatecomputing.jsvn.command.Command;
import com.alternatecomputing.jsvn.command.Status;

import javax.swing.JPanel;
import java.util.Map;

/**
 *
 */
public class StatusDialog extends CommandDialog {
	private static final String DIALOG_TITLE = "Status";
	private static final String DIALOG_CAPTION = "Status Options";

	/**
     * constructor
     * @param parent parent frame
     * @param modal boolean indicating whether or not this dialog is modal
     */
        public StatusDialog(Frame parent, boolean modal) {
            super(parent, modal);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(300, 150));
        jCheckBox1.setText("Show Updates");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 100);
        jPanel1.add(jCheckBox1, gridBagConstraints);

        jCheckBox2.setText("Verbose");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 55;
        gridBagConstraints.insets = new java.awt.Insets(7, 20, 0, 100);
        jPanel1.add(jCheckBox2, gridBagConstraints);

        jCheckBox3.setText("Non-recursive");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.insets = new java.awt.Insets(7, 20, 0, 100);
        jPanel1.add(jCheckBox3, gridBagConstraints);

        jCheckBox4.setText("Quiet");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 71;
        gridBagConstraints.insets = new java.awt.Insets(7, 20, 27, 100);
        jPanel1.add(jCheckBox4, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm

    }//GEN-LAST:event_exitForm

    public void actionPerformed(java.awt.event.ActionEvent actionEvent) {
    }

    /**
	 * creates the appropriate command to run and populated the given Map with appropriate arguments to configure the command
     * @param args map of arguments to be passed into the returned command
     * @return implementation of Command to execute with the given configured args
     */
    protected Command buildCommand(Map args) {
		args.put(Status.TARGETS, getTargets());
		if (jCheckBox1.isSelected()) {
			args.put(Status.SHOW_UPDATES, Boolean.TRUE);
		}
		if (jCheckBox2.isSelected()) {
			args.put(Status.VERBOSE, Boolean.TRUE);
		}
		if (jCheckBox3.isSelected()) {
			args.put(Status.NONRECURSIVE, Boolean.TRUE);
		}
		if (jCheckBox4.isSelected()) {
			args.put(Status.QUIET, Boolean.TRUE);
		}
		return new Status();
    }

    /**
	 * gets the captions to be displayed in the options panel
     * @return options panel caption
     */
    protected String getDialogCaption() {
        return DIALOG_CAPTION;
    }

    /**
	 * gets the title of the dialog
     * @return dialog title
     */
    protected String getDialogTitle() {
        return DIALOG_TITLE;
    }

    /**
	 * gets the panel in which all options for the command are configured
     * @return options panel
     */
    protected JPanel getOptionsPanel() {
        initComponents();
        return jPanel1;
    }

    /**
	 * determines whether the selected options are valid before the command is allowed to execute
     * @return options validity indicator
     */
    protected boolean isValidOptions() {
		return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox1;
    // End of variables declaration//GEN-END:variables

}
